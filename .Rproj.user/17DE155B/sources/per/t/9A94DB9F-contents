###############################################################################
### IMPORT AND CLEAN SCRIPT                                                   #
###   ADNI patient biomarkers data                                            #
###   Version 1                                                               #
###   Desember 2022                                                           #
###   Albert Rodrigo Parés                                                    #
###---------------------------------------------------------------------------#
###   Tasks performed:                                                        #
###     * Import biomarkers dataset:                                          #
###         - Assign correct variable format                                  #
###         - Quality control: identify missing values, correct range of      #
###             values and internal coherence.                                #
###         - Join information from other sources (biomarkers ATgroup)        #
###                                                                           #
###     * Analysis ADNI path for each patient.                                #
###         - Get in-out-follow up values                                     #
###         - Make a diagram                                                  #
###                                                                           #
###     * Unique patient info dataset: create dataframe with unique           #
###         demographic information for each patient, excluding redundant     #
###         multiple visits.                                                  #
###############################################################################
source("Rscripts/libraries.R")


#==============================================================================
# 1) IMPORT BIOMARKERS DATASET
#==============================================================================

biomarkers <- read.table(here(rawdataDir,"amylode_status",
                              "biomarkers_csvfile_defNVT_MM.txt"),
                         header=T)

#------------------------------------------------------------------------------
# A) Quality control and validation exam
#------------------------------------------------------------------------------
  # Missing values have been detected to be coded as both NA and -99
  # PTAU measurments have an lower and upper precision limit. Values below
  #   and above these thresholds appear to be coded as "<" or ">".
  #   Since a numerical value is needed, minimum and maximum threshold are
  #   reported instead: 8 and 120.

vars <- c("ABETA","TAU","PTAU","ABETA_ex")
  # -99 as NA value
biomarkers[biomarkers==-99] <- NA

  # Correct lower and upper thresholds as numeric.
biomarkers[vars] <- lapply(biomarkers[vars], FUN=function(x){
                        as.numeric(gsub("^(>|<)([0-9]+)$","\\2",x))})

#summary(biomarkers)



#==============================================================================
# 2) AMYLODE AND TAU STATUS. A/T groups
#==============================================================================

  # Given the fact that some patients have two measurements, a mean value
  # will be calculated in order to asses what status they have in both
  # Amylode beta (ABETA_ex) and TAU status.
averagedBiomarkers  <- summaryBy(cbind(PTAU,ABETA_ex) ~ RID, data=biomarkers,
                                 FUN=mean,na.rm=T,keep.names = T)

  # Classify patient status in ABETA, TAU and A/T GROUP according to the 
  # following thresholds
  #   * ABETA_ex <= 1100 -> AB+ ; AB- otherwise
  #   * PTAU >= 24 -> T+ ; T- otherwise
  #   * A/T group: AB-/T-, AB-/T+, AB+/T-, AB+/T+

averagedBiomarkers <- within(averagedBiomarkers,{
  PTAU_cat <- cut(PTAU,
                  breaks=c(-Inf,24,+Inf),
                  right=F,
                  labels=c("T-","T+"))
  
  ABETA_ex_cat <- cut(ABETA_ex,
                      breaks=c(-Inf,1100,+Inf),
                      right=T,
                      labels=c("A+","A-"))
  
#  ATgroup <- as.factor(paste(ABETA_ex_cat,PTAU_cat,sep="/"))
  ATgroup <- as.factor(paste(ABETA_ex_cat,PTAU_cat,sep=""))
})

  # Result dataframe
patientATgroup <- averagedBiomarkers[c("RID","ABETA_ex_cat",
                                       "PTAU_cat","ATgroup")]

save(patientATgroup,  file=here(cleandataDir,"patientATgroup.RData"))










#=======================================================================
# 3) COMPARE RESULTS WITH OFFICIAL CLASSIFICATION
#=======================================================================

patri <- read.table(here(rawdataDir,"amylode_status",
                "ATgroup_df.txt"),
           header=T,na.strings = "")

# Descartem pacients sense info
patri <- patri[complete.cases(patri),]

#Hi ha els mateixos pacients?
length(setdiff(patri$PTID,patientATgroup$RID))
  #tots els RID de la Patricia estan al inicial.
  # Hi ha 374 casos que no apareixen al de la Patri, però en tenim info
  #  al fitxer biomarkers original. Per què?

comparacio <- merge(patientATgroup,patri,by.x="RID",by.y="PTID",
                     all=T,suffixes = c("_albert","_patri"))
comparacio$ATgroup_patri <- as.factor(comparacio$ATgroup_patri)
summary(comparacio)

# INCONGRUÈNCIES DETECTADES ---------------------------------------

#A) Casos amb informació biomarkers i grup meu però sense info de patricia
merge(comparacio[!complete.cases(comparacio),],
      averagedBiomarkers[c("RID","ABETA_ex","PTAU")],by="RID")

#B) Amb els que estan calculats, discrepàncies?
problems <- which(comparacio$ATgroup_albert!=comparacio$ATgroup_patri)
length(problems) #en 47 pacients, hi ha discrepàncies

merge(comparacio[problems,],
      averagedBiomarkers[c("RID","PTAU","ABETA_ex")],by="RID")

      